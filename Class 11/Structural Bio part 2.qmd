---
title: "Class 11: Structural Bioinformatics Part 2"
author: "Nundini Vatshney (PID: A16867985)"
format: html
---

AlphaFold has changed the game for protein structure prediction and allows anyone with sufficient bioinformatics skills to predict the structure of virtually any protein. 


We ran AlphaFold via GoogleColab at: 
https://github.com/sokrypton/ColabFold

In particular, we used their AlphaFold2_mmseqs2 version that uses mmseqs2 rather than Hmmer for sequence search. 

The main outputs include a set of **PDB structure** files along with matching **JSON format files** that tell us how good the resulting models might be. 


Let's start by loading these structures up in Mol* 

```{r}
library(bio3d)
```


```{r}
results_dir <- "HIVPr1Dimer_23119"
pdb.files <- list.files(path="HIVPr1Dimer_23119",
                        pattern = ".pdb", 
                        full.names = TRUE)

basename(pdb.files)
```

```{r}
# Read all data from Models 
#  and superpose/fit coords
pdbs <- pdbaln(pdb.files, fit=TRUE, exefile="msa")
```

```{r}
rd <- rmsd(pdbs, fit=T)
range(rd)
```

Draw a heatmap of these RMSD matrix values

```{r}
library(pheatmap)

colnames(rd) <- paste0("m",1:5)
rownames(rd) <- paste0("m",1:5)
pheatmap(rd)
```

Now lets plot the pLDDT values across all models.

```{r}
# Read a reference PDB structure
pdb <- read.pdb("1hsg")

plotb3(pdbs$b[1,], typ="l", lwd=2, sse=pdb)
points(pdbs$b[2,], typ="l", col="red")
points(pdbs$b[3,], typ="l", col="blue")
points(pdbs$b[4,], typ="l", col="darkgreen")
points(pdbs$b[5,], typ="l", col="orange")
abline(v=100, col="gray")
```

We can improve the superposition/fitting of our models by finding the most consistent “rigid core” common across all the models.

```{r}
core <- core.find(pdbs)

#We can now use the identified core atom positions as a basis for a more suitable superposition and write out the fitted structures to a directory called corefit_structures

core.inds <- print(core, vol=0.5)
xyz <- pdbfit(pdbs, core.inds, outpath="corefit_structures")
```

Now we can examine the RMSF between positions of the structure. RMSF is an often used measure of conformational variance along the structure:

```{r}
rf <- rmsf(xyz)

plotb3(rf, sse=pdb)
abline(v=100, col="gray", ylab="RMSF")
```

```{r}
#pdb$atom
```

## Predicted Alignment Error for domains

```{r}
library(jsonlite)

# Listing of all PAE JSON files
pae_files <- list.files(path=results_dir,
                        pattern=".*model.*\\.json",
                        full.names = TRUE)
```

```{r}
pae1 <- read_json(pae_files[1],simplifyVector = TRUE)
pae5 <- read_json(pae_files[5],simplifyVector = TRUE)

attributes(pae1)
```

```{r}
# Per-residue pLDDT scores 
#  same as B-factor of PDB..
head(pae1$plddt) 
```
```{r}
pae1$max_pae
pae5$max_pae
```

```{r}
plot.dmat(pae1$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)")
```

```{r}
plot.dmat(pae5$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)",
          grid.col = "black",
          zlim=c(0,30))
```

```{r}
plot.dmat(pae1$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)",
          grid.col = "black",
          zlim=c(0,30))
```

